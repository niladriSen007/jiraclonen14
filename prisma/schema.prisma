// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum BoardType {
  SPRINT
  KANBAN
}

enum TicketStatus {
  TODO
  IN_PROGRESS
  IN_REVIEW
  DONE
}

model Board {
  id          String        @id @default(cuid())
  type        BoardType
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime
  columns     BoardColumn[]
  tickets     BoardTicket[]
}

model BoardTicket {
  id            String       @id @default(cuid())
  title         String
  description   String?
  assignedUser  User         @relation("assigned", fields: [assignedTo], references: [id])
  assignedTo    String
  reporterUser  User         @relation("reported", fields: [reportedBy], references: [id])
  reportedBy    String
  boardColumn   BoardColumn  @relation(fields: [boardColumnId], references: [id])
  boardColumnId String
  status        TicketStatus
  board         Board        @relation(fields: [boardId], references: [id])
  boardId       String
  comments      Comment[]
  storyPoints   Int?
  position      Int
}

model BoardColumn {
  id       String        @id @default(cuid())
  position Int
  label    TicketStatus  @default(TODO)
  tickets  BoardTicket[]
  board    Board         @relation(fields: [boardId], references: [id])
  boardId  String
}

model Comment {
  id            String      @id @default(cuid())
  description   String
  commenter     User        @relation(fields: [writtenBy], references: [id])
  writtenBy     String
  createdAt     DateTime    @default(now())
  boardTicket   BoardTicket @relation(fields: [boardTicketId], references: [id])
  boardTicketId String
}

model User {
  id              String        @id @default(cuid())
  email           String        @unique
  name            String
  emailVerified   Boolean       @default(false)
  image           String?
  comments        Comment[]
  assignedTicket  BoardTicket[] @relation("assigned")
  reportedTickets BoardTicket[] @relation("reported")
}
